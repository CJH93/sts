package com.fullstack.service.mallapi;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import com.fullstack.DTO.PageRequestDTO;
import com.fullstack.DTO.PageResponseDTO;
import com.fullstack.mallapi.dto.ProductDTO;
import com.fullstack.repository.mallapi.ProductRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ProductServiceImpl implements ProductService {
	
	/*
	 * service 구현체
	 * 레포지터리를 통해서 Page(Object[]) 타입의 결과 데이터 리턴
	 * 각 Object[] 의 내용은 Product 객체와 ProductImage 객체로 매핑
	 * 반복문을 통해서 위 내용으로 정의
	 * Entity --> DTO 로 변환된 것을 List<ProductDTO> 로 처리
	 * 전체 개수를 이용해서 PageResponseDTO 타입으로 생성 이를 반환하도록 정의
	 * 
	 * 1. 파라미터 분석, 요청된 페이지에 대한 Pageable 생성
	 * 2. Page 객체를 얻어냄 (Object[] 타입)
	 * 
	 */
	
	private final ProductRepository productRepository;
	
	@Override
	public PageResponseDTO<ProductDTO> getList(PageRequestDTO pageRequestDTO) {
		
		Pageable pageable = PageRequest.of(0, 10, Sort.by("pno").descending());
		
		Page<Object[]> list = productRepository.selectList(pageable);
		
		return null;
	}

}




